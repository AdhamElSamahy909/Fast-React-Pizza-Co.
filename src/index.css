@tailwind base;
@tailwind components;
@tailwind utilities;

/* We should not start using this technique all over the place now bec basically if we started doing this
for all our elements, then we would simply go back to writing CSS in the old school way.
This should be treated as an exception here when there are so many classes that we are using all at the 
same time and when we do not want to create a new component bec the actual better solution would be to reuse
all of this by creating a new React component */
@layer components {
  .input {
    @apply rounded-full border border-stone-200 px-4 py-2 text-sm transition-all duration-300 placeholder:text-stone-400
    focus:outline-none focus:ring focus:ring-yellow-400 md:px-6 md:py-3;
  }

  /* https://dev.to/afif/i-made-100-css-loaders-for-your-next-project-4eje */
  .loader {
    width: 45px;
    aspect-ratio: 0.75;
    /* Tailwind gives us a nice way of accessing Tailwind theme colors */
    --c: no-repeat linear-gradient(theme(colors.stone.800) 0 0);
    background:
      var(--c) 0% 50%,
      var(--c) 50% 50%,
      var(--c) 100% 50%;
    background-size: 20% 50%;
    animation: loading 1s infinite linear;
  }

  @keyframes loading {
    20% {
      background-position:
        0% 0%,
        50% 50%,
        100% 50%;
    }
    40% {
      background-position:
        0% 100%,
        50% 0%,
        100% 50%;
    }
    60% {
      background-position:
        0% 50%,
        50% 100%,
        100% 0%;
    }
    80% {
      background-position:
        0% 50%,
        50% 50%,
        100% 100%;
    }
  }
}
